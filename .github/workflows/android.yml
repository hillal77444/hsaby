name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      action:
        description: 'اختر العملية المطلوبة'
        required: true
        default: 'build'
        type: choice
        options:
          - build
          - download
          - clean

jobs:
  build:
    if: github.event.inputs.action == 'build' || github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Decode Keystore
        env:
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo $ENCODED_KEYSTORE | base64 -d > android_app/app/keystore.jks
      - name: Grant execute permission for gradlew
        run: chmod +x android_app/gradlew
      - name: Build with Gradle
        working-directory: android_app
        env:
          KEYSTORE_PASSWORD: Hillal774447251
          KEY_ALIAS: Hillal
          KEY_PASSWORD: Hillal774447251
        run: ./gradlew assembleRelease
      - name: Check APK exists
        run: |
          if [ ! -f "android_app/app/build/outputs/apk/release/app-release.apk" ]; then
            echo "APK file not found!"
            ls -la android_app/app/build/outputs/apk/release/
            exit 1
          fi
          echo "APK file exists"
      - name: Sign APK
        run: |
          echo "Checking for APK..."
          if [ ! -f "android_app/app/build/outputs/apk/release/app-release.apk" ]; then
            echo "Error: app-release.apk not found!"
            ls -la android_app/app/build/outputs/apk/release/
            exit 1
          fi
          echo "Zipaligning APK..."
          $ANDROID_HOME/build-tools/34.0.0/zipalign -v 4 android_app/app/build/outputs/apk/release/app-release.apk android_app/app/build/outputs/apk/release/app-release-aligned.apk
          echo "Signing APK..."
          $ANDROID_HOME/build-tools/34.0.0/apksigner sign --ks android_app/app/keystore.jks --ks-pass pass:Hillal774447251 --ks-key-alias Hillal --key-pass pass:Hillal774447251 android_app/app/build/outputs/apk/release/app-release-aligned.apk
          echo "Moving final APK..."
          mv android_app/app/build/outputs/apk/release/app-release-aligned.apk android_app/app/build/outputs/apk/release/app-release.apk
          echo "Calculating SHA256 of signed APK..."
          sha256sum android_app/app/build/outputs/apk/release/app-release.apk
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android_app/app/build/outputs/apk/release/app-release.apk

  download:
    if: github.event.inputs.action == 'download'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create ZIP file
        run: zip -r project.zip . -x "*.git*" "*.gradle*" "build/*" "app/build/*"
      - name: Upload ZIP
        uses: actions/upload-artifact@v4
        with:
          name: project-files
          path: project.zip

  clean:
    if: github.event.inputs.action == 'clean'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Clean Gradle cache and dependencies
        run: ./gradlew clean --refresh-dependencies
