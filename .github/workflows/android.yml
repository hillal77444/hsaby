name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (debug/release)'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2 -Dorg.gradle.jvmargs=-Xmx4g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Android SDK
        uses: android-actions/setup-android@v1
        with:
          cmdline-tools-version: '9477386'
          packages: |
            build-tools;34.0.0
            platform-tools
            platforms;android-34
            ndk;25.1.8937393
            cmake;3.22.1
          accept-android-sdk-licenses: true

      - name: Set up Android SDK Environment
        run: |
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/ndk/25.1.8937393" >> $GITHUB_PATH
          echo "$ANDROID_HOME/cmake/3.22.1/bin" >> $GITHUB_PATH
          
      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.22.1'
          
      - name: Set up Ninja
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build
          
      - name: Grant execute permission for gradlew
        run: chmod +x android_app/gradlew
          
      - name: Build with Gradle
        run: |
          cd android_app
          ./gradlew assembleDebug --no-daemon --parallel --max-workers=2 --build-cache
          
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android_app/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error
          
      - name: Clean Gradle cache
        if: always()
        run: |
          cd android_app
          ./gradlew cleanBuildCache
          
  download:
    needs: build
    if: github.event.inputs.build_type == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: app-release
          path: app-release
          
      - name: Create ZIP
        run: |
          cd app-release
          zip -r ../app-release.zip .
          
      - name: Upload ZIP
        uses: actions/upload-artifact@v4
        with:
          name: app-release-zip
          path: app-release.zip
          if-no-files-found: error
          
  clean:
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Clean Gradle Cache
        run: |
          cd android_app
          ./gradlew cleanBuildCache
          rm -rf ~/.gradle/caches/
          ./gradlew --stop
